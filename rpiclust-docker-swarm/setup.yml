---
- hosts: all
  become: yes
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
        state: present

    - name: Ensure old Docker APT sources are removed
      file:
        path: "/etc/apt/sources.list.d/{{ item }}"
        state: absent
      with_items:
        - download_docker_com_linux_raspbian.list
        - docker.list

    - name: Ensure Docker GPG keys are removed
      file:
        path: "/etc/apt/trusted.gpg.d/docker.gpg"
        state: absent

    - name: Download and add Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg
      become: yes
      become_method: sudo

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
      notify: Update cache

    - name: Download and install Docker
      shell: curl -fsSL https://get.docker.com | sh
      become: yes
      become_method: sudo

    - name: Ensure Docker service is enabled and started
      service:
        name: docker
        state: started
        enabled: yes

  handlers:
    - name: Update cache
      apt:
        update_cache: yes
      become: yes
      become_method: sudo

- hosts: manager
  become: yes
  tasks:
    - name: Initialize Docker Swarm
      command: docker swarm init
      ignore_errors: yes  # In case it's already a swarm manager

- hosts: workers
  become: yes
  tasks:
    - name: Retrieve Docker Swarm worker join token
      command: docker swarm join-token worker -q
      register: worker_join_token
      delegate_to: manager
      run_once: true
      changed_when: False

    - name: Join Docker Swarm
      command: docker swarm join --token {{ worker_join_token.stdout }} {{ manager_ip }}:2377
      ignore_errors: yes

    - name: Install NFS client utilities
      apt:
        name: nfs-common
        state: present

    - name: Mount the NFS storage
      mount:
        path: "{{ nfs_mount_path }}"
        src: "{{ nfs_address }}"
        fstype: nfs
        opts: "defaults"
        state: mounted
