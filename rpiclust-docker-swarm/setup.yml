---
- hosts: all
  become: yes
  tasks:
    - name: Remove conflicting Docker sources
      file:
        path: "/etc/apt/sources.list.d/docker.list"
        state: absent
      become: yes

    - name: Remove Docker keyring (if exists)
      file:
        path: "/etc/apt/keyrings/docker.gpg"
        state: absent
      become: yes

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
      register: result
      until: result is succeeded
      retries: 3

    - name: Install required dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/raspbian/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/raspbian bullseye stable"
        state: present

    - name: Install Docker CE
      apt:
        name: docker-ce
        update_cache: yes
        state: present

    - name: Ensure Docker service is enabled and started
      service:
        name: docker
        state: started
        enabled: yes

- hosts: manager
  become: yes
  tasks:
    - name: Initialize Docker Swarm
      command: docker swarm init
      ignore_errors: yes  # In case it's already a swarm manager

- hosts: workers
  become: yes
  tasks:
    - name: Retrieve Docker Swarm worker join token
      command: docker swarm join-token worker -q
      register: worker_join_token
      delegate_to: manager
      run_once: true
      changed_when: False

    - name: Join Docker Swarm
      command: docker swarm join --token {{ worker_join_token.stdout }} {{ manager_ip }}:2377
      ignore_errors: yes

    - name: Install NFS client utilities
      apt:
        name: nfs-common
        state: present

    - name: Mount the NFS storage
      mount:
        path: "{{ nfs_mount_path }}"
        src: "{{ nfs_address }}"
        fstype: nfs
        opts: "defaults"
        state: mounted
